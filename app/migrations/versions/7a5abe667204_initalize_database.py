"""Initalize database

Revision ID: 7a5abe667204
Revises: 
Create Date: 2025-06-14 11:51:44.433358

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7a5abe667204'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=True),
    sa.Column('changed_date', sa.DateTime(), nullable=True),
    sa.Column('owner', sa.String(), nullable=True),
    sa.Column('changed_by', sa.String(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('area',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=True),
    sa.Column('is_sub_area', sa.Boolean(), nullable=True),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.Column('level_requirement', sa.Integer(), nullable=True),
    sa.Column('parent_area_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_area_id'], ['area.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('area_id')
    )
    op.create_table('bait_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('raft_start_time', sa.DateTime(), nullable=False),
    sa.Column('raft_end_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('decoration_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fish',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('star_rate', sa.Integer(), nullable=True),
    sa.Column('rarity_factor', sa.Float(), nullable=True),
    sa.Column('min_length', sa.Integer(), nullable=True),
    sa.Column('average_length', sa.Integer(), nullable=True),
    sa.Column('max_length', sa.Integer(), nullable=True),
    sa.Column('breed_duration_hours', sa.Integer(), nullable=True),
    sa.Column('breed_cost', sa.Integer(), nullable=True),
    sa.Column('breed_success_rate', sa.Float(), nullable=True),
    sa.Column('hue_shift_of_shiny', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('club_points', sa.Integer(), nullable=True),
    sa.Column('fishcoins_to_unlock', sa.Integer(), nullable=True),
    sa.Column('fruit_combination_count_to_unlock', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fruit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('homeplan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('look',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('npc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outfit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sex', sa.Integer(), nullable=False),
    sa.Column('skin_color', sa.String(), nullable=False),
    sa.Column('outfit_template_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['outfit_template_id'], ['outfit_template.id'], name='fk_outfit_outfit_template', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('outfit_template_id')
    )
    op.create_table('outfit_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('style', sa.String(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], name='fk_outfit_template_player', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('owner', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rod',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('size', sa.Enum('Small', 'Normal', 'Big', name='rodsizes'), nullable=False),
    sa.Column('length_quality', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('area_fish',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bait',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('bait_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['bait_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('caught_date',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_range', sa.String(), nullable=True),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('caught_time',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time_range', sa.String(), nullable=True),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('completion_id', sa.Integer(), nullable=True),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('config_npc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('herb_amount', sa.Integer(), nullable=False),
    sa.Column('vasily_rate', sa.Integer(), nullable=False),
    sa.Column('herb_area_id', sa.Integer(), nullable=True),
    sa.Column('herb_fish_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['herb_area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['herb_fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('decoration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('homepoints', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['decoration_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fish_area',
    sa.Column('fish_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('fish_id', 'area_id')
    )
    op.create_table('fish_bait_category',
    sa.Column('fish_id', sa.Integer(), nullable=False),
    sa.Column('bait_category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bait_category_id'], ['bait_category.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('fish_id', 'bait_category_id')
    )
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fishbucks', sa.Integer(), nullable=True),
    sa.Column('fishcoins', sa.Integer(), nullable=True),
    sa.Column('energy', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('online', sa.Boolean(), nullable=True),
    sa.Column('last_activity_date', sa.DateTime(), nullable=True),
    sa.Column('current_area_id', sa.Integer(), nullable=True),
    sa.Column('homeplan_id', sa.Integer(), nullable=True),
    sa.Column('outfit_id', sa.Integer(), nullable=True),
    sa.Column('current_bait_item_id', sa.Integer(), nullable=True),
    sa.Column('current_rod_item_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['current_area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['current_bait_item_id'], ['item.id'], name='fk_player_current_bait_item', use_alter=True),
    sa.ForeignKeyConstraint(['current_rod_item_id'], ['item.id'], name='fk_player_current_rod_item', use_alter=True),
    sa.ForeignKeyConstraint(['homeplan_id'], ['homeplan.id'], ),
    sa.ForeignKeyConstraint(['id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['outfit_id'], ['outfit.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('homeplan_id'),
    sa.UniqueConstraint('outfit_id')
    )
    op.create_table('special_location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('fishing_mission_quantity', sa.Integer(), nullable=False),
    sa.Column('is_shine_fishing_log', sa.Boolean(), nullable=False),
    sa.Column('star_rate', sa.Integer(), nullable=False),
    sa.Column('fish_length', sa.Integer(), nullable=False),
    sa.Column('area_registration_type', sa.Enum('TroutFarm', 'Pyramid', 'LuckyWheel', 'PalmIsland', 'HarborBoat', 'CoolMountainBot', name='registrationtype'), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.Column('npc_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.ForeignKeyConstraint(['npc_id'], ['npc.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('area_registration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_type', sa.Enum('TroutFarm', 'Pyramid', 'LuckyWheel', 'PalmIsland', 'HarborBoat', 'CoolMountainBot', name='registrationtype'), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('club',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('leader_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['leader_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('leader_id')
    )
    op.create_table('decoration_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('homeplan_id', sa.Integer(), nullable=True),
    sa.Column('decoration_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['decoration_id'], ['decoration.id'], ),
    sa.ForeignKeyConstraint(['homeplan_id'], ['homeplan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fish_special_location',
    sa.Column('fish_id', sa.Integer(), nullable=False),
    sa.Column('special_location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.ForeignKeyConstraint(['special_location_id'], ['special_location.id'], ),
    sa.PrimaryKeyConstraint('fish_id', 'special_location_id')
    )
    op.create_table('fishdex_notepad',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fishing_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id')
    )
    op.create_table('fishing_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_shiny', sa.Boolean(), nullable=True),
    sa.Column('earned_xp', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=False),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.Column('bait_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('rod_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['bait_id'], ['bait.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['rod_id'], ['rod.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('home_fish',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('money_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_fish_bucks', sa.Boolean(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('money_tree',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id')
    )
    op.create_table('penalty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('penalty_type', sa.Enum('PM', 'Ban', 'LevelBan', name='penaltytype'), nullable=False),
    sa.Column('period_minutes', sa.Integer(), nullable=False),
    sa.Column('moderator_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('penalized_player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['penalized_player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_friend',
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('player_id', 'friend_id')
    )
    op.create_table('player_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('show_birth_date_on_profile', sa.Boolean(), nullable=True),
    sa.Column('show_email_on_profile', sa.Boolean(), nullable=True),
    sa.Column('show_inventory_on_profile', sa.Boolean(), nullable=True),
    sa.Column('receive_emails', sa.Boolean(), nullable=True),
    sa.Column('width_unit', sa.Enum('feet', 'centimeters', name='widthunit'), nullable=True),
    sa.Column('time_zone_last_update', sa.DateTime(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id')
    )
    op.create_table('player_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('total_game_play_hours', sa.Integer(), nullable=True),
    sa.Column('won_tournament_count', sa.Integer(), nullable=True),
    sa.Column('earned_award_count', sa.Integer(), nullable=True),
    sa.Column('completed_tasks_count', sa.Integer(), nullable=True),
    sa.Column('biggest_fish_catched_width', sa.Integer(), nullable=True),
    sa.Column('total_fish_catched_count', sa.Integer(), nullable=True),
    sa.Column('total_fish_species_catched_count', sa.Integer(), nullable=True),
    sa.Column('home_points', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('player_id')
    )
    op.create_table('pm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('seen', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reject',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('moderator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('Pending', 'Reviewed', 'Rejected', 'Penalty', name='reportstatus'), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('reported_player_id', sa.Integer(), nullable=True),
    sa.Column('reporting_by_player_id', sa.Integer(), nullable=True),
    sa.Column('reviewer_moderator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['reported_player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['reporting_by_player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['reviewer_moderator_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_completion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('catched_fish_amount', sa.Integer(), nullable=False),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('traded_with_npc', sa.Boolean(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=True),
    sa.Column('given_by_id', sa.Integer(), nullable=True),
    sa.Column('taken_by_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['area.id'], ),
    sa.ForeignKeyConstraint(['given_by_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['taken_by_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('upgrade_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('upgrade_type', sa.Enum('FishingLine', 'MoneyTree', name='upgradetype'), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('club_fish',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('fish_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['fish_id'], ['fish.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('club_player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('created_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.Enum('Fruit', 'Shell', 'Look', 'Bait', 'Rod', 'Decoration', 'Fishbucks', 'Fishcoins', 'Fishbox', 'Energy', name='inventorytype'), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('bait_id', sa.Integer(), nullable=True),
    sa.Column('rod_id', sa.Integer(), nullable=True),
    sa.Column('look_id', sa.Integer(), nullable=True),
    sa.Column('fruit_id', sa.Integer(), nullable=True),
    sa.Column('decoration_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('trade_given_id', sa.Integer(), nullable=True),
    sa.Column('trade_taken_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bait_id'], ['bait.id'], ),
    sa.ForeignKeyConstraint(['decoration_id'], ['decoration.id'], ),
    sa.ForeignKeyConstraint(['fruit_id'], ['fruit.id'], ),
    sa.ForeignKeyConstraint(['look_id'], ['look.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['player.id'], ),
    sa.ForeignKeyConstraint(['rod_id'], ['rod.id'], ),
    sa.ForeignKeyConstraint(['trade_given_id'], ['trade.id'], ),
    sa.ForeignKeyConstraint(['trade_taken_id'], ['trade.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('decoration_id')
    )
    op.create_table('shop_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_award',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['item.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_award')
    op.drop_table('shop_item')
    op.drop_table('item')
    op.drop_table('club_player')
    op.drop_table('club_fish')
    op.drop_table('upgrade_record')
    op.drop_table('trade')
    op.drop_table('task_completion')
    op.drop_table('report_record')
    op.drop_table('reject')
    op.drop_table('pm')
    op.drop_table('player_stats')
    op.drop_table('player_settings')
    op.drop_table('player_friend')
    op.drop_table('penalty')
    op.drop_table('money_tree')
    op.drop_table('money_history')
    op.drop_table('home_fish')
    op.drop_table('fishing_log')
    op.drop_table('fishing_line')
    op.drop_table('fishdex_notepad')
    op.drop_table('fish_special_location')
    op.drop_table('decoration_item')
    op.drop_table('club')
    op.drop_table('area_registration')
    op.drop_table('task')
    op.drop_table('special_location')
    op.drop_table('player')
    op.drop_table('fish_bait_category')
    op.drop_table('fish_area')
    op.drop_table('decoration')
    op.drop_table('config_npc')
    op.drop_table('collection_completion')
    op.drop_table('caught_time')
    op.drop_table('caught_date')
    op.drop_table('bait')
    op.drop_table('area_fish')
    op.drop_table('rod')
    op.drop_table('payment')
    op.drop_table('outfit_template')
    op.drop_table('outfit')
    op.drop_table('npc')
    op.drop_table('look')
    op.drop_table('homeplan')
    op.drop_table('fruit')
    op.drop_table('fish')
    op.drop_table('decoration_category')
    op.drop_table('config')
    op.drop_table('chat_log')
    op.drop_table('bait_category')
    op.drop_table('area')
    op.drop_table('account')
    # ### end Alembic commands ###
